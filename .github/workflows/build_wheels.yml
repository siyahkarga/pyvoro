name: Build and distribute Python package

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version:
          - { version: "3.10", cibw: "cp310-*" }
          - { version: "3.11", cibw: "cp311-*" }
          - { version: "3.12", cibw: "cp312-*" }
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version.version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel==2.22.0

      - name: Build wheels
        env:
          CIBW_BUILD: ${{ matrix.python-version.cibw }}
          CIBW_ARCHS_WINDOWS: AMD64
        run: |
          cibuildwheel --output-dir dist

      - name: Upload Windows wheels
        uses: actions/upload-artifact@v3
        with:
          name: windows-wheels-${{ github.sha }}
          path: dist/*.whl

  build_linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - { version: "3.10", cibw: "cp310-*" }
          - { version: "3.11", cibw: "cp311-*" }
          - { version: "3.12", cibw: "cp312-*" }
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version.version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel==2.22.0

      - name: Build wheels
        env:
          CIBW_BUILD: ${{ matrix.python-version.cibw }}
        run: |
          cibuildwheel --output-dir dist --platform linux

      - name: Upload Linux wheels
        uses: actions/upload-artifact@v3
        with:
          name: linux-wheels-${{ github.sha }}
          path: dist/*.whl

  build_macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version:
          - { version: "3.10", cibw: "cp310-*" }
          - { version: "3.11", cibw: "cp311-*" }
          - { version: "3.12", cibw: "cp312-*" }
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version.version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel==2.22.0

      - name: Build wheels
        env:
          CIBW_BUILD: ${{ matrix.python-version.cibw }}
          CIBW_ARCHS_MACOS: x86_64 arm64
        run: |
          cibuildwheel --output-dir dist

      - name: Upload macOS wheels
        uses: actions/upload-artifact@v3
        with:
          name: macos-wheels-${{ github.sha }}
          path: dist/*.whl

  upload_to_testpypi:
    runs-on: ubuntu-latest
    needs: [build_windows, build_linux, build_macos]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Download artifacts for Windows, Linux, and macOS
      - name: Download Windows wheels
        uses: actions/download-artifact@v3
        with:
          name: windows-wheels-${{ github.sha }}
          path: ./dist

      - name: Download Linux wheels
        uses: actions/download-artifact@v3
        with:
          name: linux-wheels-${{ github.sha }}
          path: ./dist

      - name: Download macOS wheels
        uses: actions/download-artifact@v3
        with:
          name: macos-wheels-${{ github.sha }}
          path: ./dist

      - name: Upload wheels to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          username: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          packages-dir: dist
